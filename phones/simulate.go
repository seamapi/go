// This file was auto-generated by Fern from our API Definition.

package phones

import (
	json "encoding/json"
	fmt "fmt"
	seamapigo "github.com/seamapi/go"
	core "github.com/seamapi/go/core"
)

type SimulateCreateSandboxPhoneRequest struct {
	AssaAbloyCredentialServiceAcsSystemId string                                              `json:"assa_abloy_credential_service_acs_system_id" url:"assa_abloy_credential_service_acs_system_id"`
	CustomSdkInstallationId               *string                                             `json:"custom_sdk_installation_id,omitempty" url:"custom_sdk_installation_id,omitempty"`
	UserIdentityId                        string                                              `json:"user_identity_id" url:"user_identity_id"`
	PhoneMetadata                         *SimulateCreateSandboxPhoneRequestPhoneMetadata     `json:"phone_metadata,omitempty" url:"phone_metadata,omitempty"`
	AssaAbloyMetadata                     *SimulateCreateSandboxPhoneRequestAssaAbloyMetadata `json:"assa_abloy_metadata,omitempty" url:"assa_abloy_metadata,omitempty"`
}

type SimulateCreateSandboxPhoneRequestAssaAbloyMetadata struct {
	BleCapability      *bool    `json:"ble_capability,omitempty" url:"ble_capability,omitempty"`
	HceCapability      *bool    `json:"hce_capability,omitempty" url:"hce_capability,omitempty"`
	NfcCapability      *bool    `json:"nfc_capability,omitempty" url:"nfc_capability,omitempty"`
	ApplicationVersion *string  `json:"application_version,omitempty" url:"application_version,omitempty"`
	SeosAppletVersion  *string  `json:"seos_applet_version,omitempty" url:"seos_applet_version,omitempty"`
	SeosTsmEndpointId  *float64 `json:"seos_tsm_endpoint_id,omitempty" url:"seos_tsm_endpoint_id,omitempty"`

	_rawJSON json.RawMessage
}

func (s *SimulateCreateSandboxPhoneRequestAssaAbloyMetadata) UnmarshalJSON(data []byte) error {
	type unmarshaler SimulateCreateSandboxPhoneRequestAssaAbloyMetadata
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*s = SimulateCreateSandboxPhoneRequestAssaAbloyMetadata(value)
	s._rawJSON = json.RawMessage(data)
	return nil
}

func (s *SimulateCreateSandboxPhoneRequestAssaAbloyMetadata) String() string {
	if len(s._rawJSON) > 0 {
		if value, err := core.StringifyJSON(s._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(s); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", s)
}

type SimulateCreateSandboxPhoneRequestPhoneMetadata struct {
	OperatingSystem    *seamapigo.PhoneOperatingSystem `json:"operating_system,omitempty" url:"operating_system,omitempty"`
	OsVersion          *string                         `json:"os_version,omitempty" url:"os_version,omitempty"`
	DeviceManufacturer *string                         `json:"device_manufacturer,omitempty" url:"device_manufacturer,omitempty"`
	DeviceModel        *string                         `json:"device_model,omitempty" url:"device_model,omitempty"`

	_rawJSON json.RawMessage
}

func (s *SimulateCreateSandboxPhoneRequestPhoneMetadata) UnmarshalJSON(data []byte) error {
	type unmarshaler SimulateCreateSandboxPhoneRequestPhoneMetadata
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*s = SimulateCreateSandboxPhoneRequestPhoneMetadata(value)
	s._rawJSON = json.RawMessage(data)
	return nil
}

func (s *SimulateCreateSandboxPhoneRequestPhoneMetadata) String() string {
	if len(s._rawJSON) > 0 {
		if value, err := core.StringifyJSON(s._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(s); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", s)
}

type SimulateCreateSandboxPhoneResponse struct {
	Phone *seamapigo.Phone `json:"phone,omitempty" url:"phone,omitempty"`
	Ok    bool             `json:"ok" url:"ok"`

	_rawJSON json.RawMessage
}

func (s *SimulateCreateSandboxPhoneResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler SimulateCreateSandboxPhoneResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*s = SimulateCreateSandboxPhoneResponse(value)
	s._rawJSON = json.RawMessage(data)
	return nil
}

func (s *SimulateCreateSandboxPhoneResponse) String() string {
	if len(s._rawJSON) > 0 {
		if value, err := core.StringifyJSON(s._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(s); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", s)
}
