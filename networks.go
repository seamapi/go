// This file was auto-generated by Fern from our API Definition.

package api

import (
	json "encoding/json"
	fmt "fmt"
	core "github.com/seamapi/go/core"
)

type NetworksGetRequest struct {
	NetworkId string `json:"network_id" url:"network_id"`
}

type NetworksListRequest struct {
}

type NetworksGetResponse struct {
	Network *Network `json:"network,omitempty" url:"network,omitempty"`
	Ok      bool     `json:"ok" url:"ok"`

	_rawJSON json.RawMessage
}

func (n *NetworksGetResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler NetworksGetResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*n = NetworksGetResponse(value)
	n._rawJSON = json.RawMessage(data)
	return nil
}

func (n *NetworksGetResponse) String() string {
	if len(n._rawJSON) > 0 {
		if value, err := core.StringifyJSON(n._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(n); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", n)
}

type NetworksListResponse struct {
	Networks []*Network `json:"networks,omitempty" url:"networks,omitempty"`
	Ok       bool       `json:"ok" url:"ok"`

	_rawJSON json.RawMessage
}

func (n *NetworksListResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler NetworksListResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*n = NetworksListResponse(value)
	n._rawJSON = json.RawMessage(data)
	return nil
}

func (n *NetworksListResponse) String() string {
	if len(n._rawJSON) > 0 {
		if value, err := core.StringifyJSON(n._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(n); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", n)
}
